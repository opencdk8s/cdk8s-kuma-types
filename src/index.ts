// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 * CircuitBreaker is the Schema for the circuitbreaker API
 *
 * @schema CircuitBreaker
 */
export class CircuitBreaker extends ApiObject {
  /**
   * Returns the apiVersion and kind for "CircuitBreaker"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'CircuitBreaker',
  }

  /**
   * Renders a Kubernetes manifest for "CircuitBreaker".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: CircuitBreakerProps = {}): any {
    return {
      ...CircuitBreaker.GVK,
      ...toJson_CircuitBreakerProps(props),
    };
  }

  /**
   * Defines a "CircuitBreaker" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: CircuitBreakerProps = {}) {
    super(scope, id, CircuitBreaker.manifest(props));
  }
}

/**
 * CircuitBreaker is the Schema for the circuitbreaker API
 *
 * @schema CircuitBreaker
 */
export interface CircuitBreakerProps {
  /**
   * @schema CircuitBreaker#mesh
   */
  readonly mesh?: string;

  /**
   * @schema CircuitBreaker#spec
   */
  readonly spec?: any;

  /**
   * @schema CircuitBreaker#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'CircuitBreakerProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CircuitBreakerProps(obj: CircuitBreakerProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * Dataplane is the Schema for the dataplanes API
 *
 * @schema Dataplane
 */
export class Dataplane extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Dataplane"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'Dataplane',
  }

  /**
   * Renders a Kubernetes manifest for "Dataplane".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DataplaneProps = {}): any {
    return {
      ...Dataplane.GVK,
      ...toJson_DataplaneProps(props),
    };
  }

  /**
   * Defines a "Dataplane" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DataplaneProps = {}) {
    super(scope, id, Dataplane.manifest(props));
  }
}

/**
 * Dataplane is the Schema for the dataplanes API
 *
 * @schema Dataplane
 */
export interface DataplaneProps {
  /**
   * @schema Dataplane#mesh
   */
  readonly mesh?: string;

  /**
   * @schema Dataplane#spec
   */
  readonly spec?: any;

  /**
   * @schema Dataplane#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'DataplaneProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataplaneProps(obj: DataplaneProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * DataplaneInsight is the Schema for the dataplane insights API
 *
 * @schema DataplaneInsight
 */
export class DataplaneInsight extends ApiObject {
  /**
   * Returns the apiVersion and kind for "DataplaneInsight"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'DataplaneInsight',
  }

  /**
   * Renders a Kubernetes manifest for "DataplaneInsight".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DataplaneInsightProps = {}): any {
    return {
      ...DataplaneInsight.GVK,
      ...toJson_DataplaneInsightProps(props),
    };
  }

  /**
   * Defines a "DataplaneInsight" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DataplaneInsightProps = {}) {
    super(scope, id, DataplaneInsight.manifest(props));
  }
}

/**
 * DataplaneInsight is the Schema for the dataplane insights API
 *
 * @schema DataplaneInsight
 */
export interface DataplaneInsightProps {
  /**
   * @schema DataplaneInsight#mesh
   */
  readonly mesh?: string;

  /**
   * @schema DataplaneInsight#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'DataplaneInsightProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataplaneInsightProps(obj: DataplaneInsightProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema ExternalService
 */
export class ExternalService extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ExternalService"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'ExternalService',
  }

  /**
   * Renders a Kubernetes manifest for "ExternalService".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ExternalServiceProps = {}): any {
    return {
      ...ExternalService.GVK,
      ...toJson_ExternalServiceProps(props),
    };
  }

  /**
   * Defines a "ExternalService" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ExternalServiceProps = {}) {
    super(scope, id, ExternalService.manifest(props));
  }
}

/**
 * @schema ExternalService
 */
export interface ExternalServiceProps {
  /**
   * @schema ExternalService#mesh
   */
  readonly mesh?: string;

  /**
   * @schema ExternalService#spec
   */
  readonly spec?: any;

  /**
   * @schema ExternalService#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'ExternalServiceProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ExternalServiceProps(obj: ExternalServiceProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * FaultInjection is the Schema for the faultinjections API
 *
 * @schema FaultInjection
 */
export class FaultInjection extends ApiObject {
  /**
   * Returns the apiVersion and kind for "FaultInjection"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'FaultInjection',
  }

  /**
   * Renders a Kubernetes manifest for "FaultInjection".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: FaultInjectionProps = {}): any {
    return {
      ...FaultInjection.GVK,
      ...toJson_FaultInjectionProps(props),
    };
  }

  /**
   * Defines a "FaultInjection" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: FaultInjectionProps = {}) {
    super(scope, id, FaultInjection.manifest(props));
  }
}

/**
 * FaultInjection is the Schema for the faultinjections API
 *
 * @schema FaultInjection
 */
export interface FaultInjectionProps {
  /**
   * @schema FaultInjection#mesh
   */
  readonly mesh?: string;

  /**
   * @schema FaultInjection#spec
   */
  readonly spec?: any;

  /**
   * @schema FaultInjection#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'FaultInjectionProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_FaultInjectionProps(obj: FaultInjectionProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * HealthCheck is the Schema for the healthchecks API
 *
 * @schema HealthCheck
 */
export class HealthCheck extends ApiObject {
  /**
   * Returns the apiVersion and kind for "HealthCheck"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'HealthCheck',
  }

  /**
   * Renders a Kubernetes manifest for "HealthCheck".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: HealthCheckProps = {}): any {
    return {
      ...HealthCheck.GVK,
      ...toJson_HealthCheckProps(props),
    };
  }

  /**
   * Defines a "HealthCheck" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: HealthCheckProps = {}) {
    super(scope, id, HealthCheck.manifest(props));
  }
}

/**
 * HealthCheck is the Schema for the healthchecks API
 *
 * @schema HealthCheck
 */
export interface HealthCheckProps {
  /**
   * @schema HealthCheck#mesh
   */
  readonly mesh?: string;

  /**
   * @schema HealthCheck#spec
   */
  readonly spec?: any;

  /**
   * @schema HealthCheck#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'HealthCheckProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HealthCheckProps(obj: HealthCheckProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * Mesh is the Schema for the meshes API
 *
 * @schema Mesh
 */
export class Mesh extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Mesh"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'Mesh',
  }

  /**
   * Renders a Kubernetes manifest for "Mesh".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: MeshProps = {}): any {
    return {
      ...Mesh.GVK,
      ...toJson_MeshProps(props),
    };
  }

  /**
   * Defines a "Mesh" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: MeshProps = {}) {
    super(scope, id, Mesh.manifest(props));
  }
}

/**
 * Mesh is the Schema for the meshes API
 *
 * @schema Mesh
 */
export interface MeshProps {
  /**
   * @schema Mesh#spec
   */
  readonly spec?: any;

  /**
   * @schema Mesh#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'MeshProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_MeshProps(obj: MeshProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * MeshInsight is the Schema for the meshes insights API
 *
 * @schema MeshInsight
 */
export class MeshInsight extends ApiObject {
  /**
   * Returns the apiVersion and kind for "MeshInsight"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'MeshInsight',
  }

  /**
   * Renders a Kubernetes manifest for "MeshInsight".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: MeshInsightProps = {}): any {
    return {
      ...MeshInsight.GVK,
      ...toJson_MeshInsightProps(props),
    };
  }

  /**
   * Defines a "MeshInsight" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: MeshInsightProps = {}) {
    super(scope, id, MeshInsight.manifest(props));
  }
}

/**
 * MeshInsight is the Schema for the meshes insights API
 *
 * @schema MeshInsight
 */
export interface MeshInsightProps {
  /**
   * @schema MeshInsight#mesh
   */
  readonly mesh?: string;

  /**
   * @schema MeshInsight#spec
   */
  readonly spec?: any;

  /**
   * @schema MeshInsight#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'MeshInsightProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_MeshInsightProps(obj: MeshInsightProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * ProxyTemplate is the Schema for the proxytemplates API
 *
 * @schema ProxyTemplate
 */
export class ProxyTemplate extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ProxyTemplate"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'ProxyTemplate',
  }

  /**
   * Renders a Kubernetes manifest for "ProxyTemplate".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ProxyTemplateProps = {}): any {
    return {
      ...ProxyTemplate.GVK,
      ...toJson_ProxyTemplateProps(props),
    };
  }

  /**
   * Defines a "ProxyTemplate" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ProxyTemplateProps = {}) {
    super(scope, id, ProxyTemplate.manifest(props));
  }
}

/**
 * ProxyTemplate is the Schema for the proxytemplates API
 *
 * @schema ProxyTemplate
 */
export interface ProxyTemplateProps {
  /**
   * @schema ProxyTemplate#mesh
   */
  readonly mesh?: string;

  /**
   * @schema ProxyTemplate#spec
   */
  readonly spec?: any;

  /**
   * @schema ProxyTemplate#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'ProxyTemplateProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ProxyTemplateProps(obj: ProxyTemplateProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * RateLimit is the Schema for the ratelimits API
 *
 * @schema RateLimit
 */
export class RateLimit extends ApiObject {
  /**
   * Returns the apiVersion and kind for "RateLimit"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'RateLimit',
  }

  /**
   * Renders a Kubernetes manifest for "RateLimit".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: RateLimitProps = {}): any {
    return {
      ...RateLimit.GVK,
      ...toJson_RateLimitProps(props),
    };
  }

  /**
   * Defines a "RateLimit" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: RateLimitProps = {}) {
    super(scope, id, RateLimit.manifest(props));
  }
}

/**
 * RateLimit is the Schema for the ratelimits API
 *
 * @schema RateLimit
 */
export interface RateLimitProps {
  /**
   * @schema RateLimit#mesh
   */
  readonly mesh?: string;

  /**
   * @schema RateLimit#spec
   */
  readonly spec?: any;

  /**
   * @schema RateLimit#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'RateLimitProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RateLimitProps(obj: RateLimitProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * Retry is the Schema for the retries API
 *
 * @schema Retry
 */
export class Retry extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Retry"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'Retry',
  }

  /**
   * Renders a Kubernetes manifest for "Retry".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: RetryProps = {}): any {
    return {
      ...Retry.GVK,
      ...toJson_RetryProps(props),
    };
  }

  /**
   * Defines a "Retry" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: RetryProps = {}) {
    super(scope, id, Retry.manifest(props));
  }
}

/**
 * Retry is the Schema for the retries API
 *
 * @schema Retry
 */
export interface RetryProps {
  /**
   * @schema Retry#mesh
   */
  readonly mesh?: string;

  /**
   * @schema Retry#spec
   */
  readonly spec?: any;

  /**
   * @schema Retry#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'RetryProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RetryProps(obj: RetryProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * ServiceInsight is the Schema for the services insights API
 *
 * @schema ServiceInsight
 */
export class ServiceInsight extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ServiceInsight"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'ServiceInsight',
  }

  /**
   * Renders a Kubernetes manifest for "ServiceInsight".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ServiceInsightProps = {}): any {
    return {
      ...ServiceInsight.GVK,
      ...toJson_ServiceInsightProps(props),
    };
  }

  /**
   * Defines a "ServiceInsight" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ServiceInsightProps = {}) {
    super(scope, id, ServiceInsight.manifest(props));
  }
}

/**
 * ServiceInsight is the Schema for the services insights API
 *
 * @schema ServiceInsight
 */
export interface ServiceInsightProps {
  /**
   * @schema ServiceInsight#mesh
   */
  readonly mesh?: string;

  /**
   * @schema ServiceInsight#spec
   */
  readonly spec?: any;

  /**
   * @schema ServiceInsight#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'ServiceInsightProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ServiceInsightProps(obj: ServiceInsightProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * Timeout is the Schema for the timeout API
 *
 * @schema Timeout
 */
export class Timeout extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Timeout"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'Timeout',
  }

  /**
   * Renders a Kubernetes manifest for "Timeout".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TimeoutProps = {}): any {
    return {
      ...Timeout.GVK,
      ...toJson_TimeoutProps(props),
    };
  }

  /**
   * Defines a "Timeout" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TimeoutProps = {}) {
    super(scope, id, Timeout.manifest(props));
  }
}

/**
 * Timeout is the Schema for the timeout API
 *
 * @schema Timeout
 */
export interface TimeoutProps {
  /**
   * @schema Timeout#mesh
   */
  readonly mesh?: string;

  /**
   * @schema Timeout#spec
   */
  readonly spec?: any;

  /**
   * @schema Timeout#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'TimeoutProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TimeoutProps(obj: TimeoutProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * TrafficLog is the Schema for the trafficlogs API
 *
 * @schema TrafficLog
 */
export class TrafficLog extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TrafficLog"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'TrafficLog',
  }

  /**
   * Renders a Kubernetes manifest for "TrafficLog".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TrafficLogProps = {}): any {
    return {
      ...TrafficLog.GVK,
      ...toJson_TrafficLogProps(props),
    };
  }

  /**
   * Defines a "TrafficLog" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TrafficLogProps = {}) {
    super(scope, id, TrafficLog.manifest(props));
  }
}

/**
 * TrafficLog is the Schema for the trafficlogs API
 *
 * @schema TrafficLog
 */
export interface TrafficLogProps {
  /**
   * @schema TrafficLog#mesh
   */
  readonly mesh?: string;

  /**
   * @schema TrafficLog#spec
   */
  readonly spec?: any;

  /**
   * @schema TrafficLog#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'TrafficLogProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TrafficLogProps(obj: TrafficLogProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * TrafficPermission is the Schema for the trafficpermissions API
 *
 * @schema TrafficPermission
 */
export class TrafficPermission extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TrafficPermission"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'TrafficPermission',
  }

  /**
   * Renders a Kubernetes manifest for "TrafficPermission".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TrafficPermissionProps = {}): any {
    return {
      ...TrafficPermission.GVK,
      ...toJson_TrafficPermissionProps(props),
    };
  }

  /**
   * Defines a "TrafficPermission" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TrafficPermissionProps = {}) {
    super(scope, id, TrafficPermission.manifest(props));
  }
}

/**
 * TrafficPermission is the Schema for the trafficpermissions API
 *
 * @schema TrafficPermission
 */
export interface TrafficPermissionProps {
  /**
   * @schema TrafficPermission#mesh
   */
  readonly mesh?: string;

  /**
   * @schema TrafficPermission#spec
   */
  readonly spec?: any;

  /**
   * @schema TrafficPermission#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'TrafficPermissionProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TrafficPermissionProps(obj: TrafficPermissionProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * TrafficRoute is the Schema for the trafficroutes API
 *
 * @schema TrafficRoute
 */
export class TrafficRoute extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TrafficRoute"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'TrafficRoute',
  }

  /**
   * Renders a Kubernetes manifest for "TrafficRoute".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TrafficRouteProps = {}): any {
    return {
      ...TrafficRoute.GVK,
      ...toJson_TrafficRouteProps(props),
    };
  }

  /**
   * Defines a "TrafficRoute" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TrafficRouteProps = {}) {
    super(scope, id, TrafficRoute.manifest(props));
  }
}

/**
 * TrafficRoute is the Schema for the trafficroutes API
 *
 * @schema TrafficRoute
 */
export interface TrafficRouteProps {
  /**
   * @schema TrafficRoute#mesh
   */
  readonly mesh?: string;

  /**
   * @schema TrafficRoute#spec
   */
  readonly spec?: any;

  /**
   * @schema TrafficRoute#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'TrafficRouteProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TrafficRouteProps(obj: TrafficRouteProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * TrafficTrace is the Schema for the traffictraces API
 *
 * @schema TrafficTrace
 */
export class TrafficTrace extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TrafficTrace"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'TrafficTrace',
  }

  /**
   * Renders a Kubernetes manifest for "TrafficTrace".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TrafficTraceProps = {}): any {
    return {
      ...TrafficTrace.GVK,
      ...toJson_TrafficTraceProps(props),
    };
  }

  /**
   * Defines a "TrafficTrace" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TrafficTraceProps = {}) {
    super(scope, id, TrafficTrace.manifest(props));
  }
}

/**
 * TrafficTrace is the Schema for the traffictraces API
 *
 * @schema TrafficTrace
 */
export interface TrafficTraceProps {
  /**
   * @schema TrafficTrace#mesh
   */
  readonly mesh?: string;

  /**
   * @schema TrafficTrace#spec
   */
  readonly spec?: any;

  /**
   * @schema TrafficTrace#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'TrafficTraceProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TrafficTraceProps(obj: TrafficTraceProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * VirtualOutbound is the Schema for the virtualoutbounds API
 *
 * @schema VirtualOutbound
 */
export class VirtualOutbound extends ApiObject {
  /**
   * Returns the apiVersion and kind for "VirtualOutbound"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'VirtualOutbound',
  }

  /**
   * Renders a Kubernetes manifest for "VirtualOutbound".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: VirtualOutboundProps = {}): any {
    return {
      ...VirtualOutbound.GVK,
      ...toJson_VirtualOutboundProps(props),
    };
  }

  /**
   * Defines a "VirtualOutbound" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: VirtualOutboundProps = {}) {
    super(scope, id, VirtualOutbound.manifest(props));
  }
}

/**
 * VirtualOutbound is the Schema for the virtualoutbounds API
 *
 * @schema VirtualOutbound
 */
export interface VirtualOutboundProps {
  /**
   * @schema VirtualOutbound#mesh
   */
  readonly mesh?: string;

  /**
   * @schema VirtualOutbound#spec
   */
  readonly spec?: any;

  /**
   * @schema VirtualOutbound#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'VirtualOutboundProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_VirtualOutboundProps(obj: VirtualOutboundProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * Zone is the Schema for the zone API
 *
 * @schema Zone
 */
export class Zone extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Zone"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'Zone',
  }

  /**
   * Renders a Kubernetes manifest for "Zone".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ZoneProps = {}): any {
    return {
      ...Zone.GVK,
      ...toJson_ZoneProps(props),
    };
  }

  /**
   * Defines a "Zone" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ZoneProps = {}) {
    super(scope, id, Zone.manifest(props));
  }
}

/**
 * Zone is the Schema for the zone API
 *
 * @schema Zone
 */
export interface ZoneProps {
  /**
   * @schema Zone#mesh
   */
  readonly mesh?: string;

  /**
   * @schema Zone#spec
   */
  readonly spec?: any;

  /**
   * @schema Zone#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'ZoneProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ZoneProps(obj: ZoneProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * ZoneIngress is the Schema for the zone ingress API
 *
 * @schema ZoneIngress
 */
export class ZoneIngress extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ZoneIngress"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'ZoneIngress',
  }

  /**
   * Renders a Kubernetes manifest for "ZoneIngress".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ZoneIngressProps = {}): any {
    return {
      ...ZoneIngress.GVK,
      ...toJson_ZoneIngressProps(props),
    };
  }

  /**
   * Defines a "ZoneIngress" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ZoneIngressProps = {}) {
    super(scope, id, ZoneIngress.manifest(props));
  }
}

/**
 * ZoneIngress is the Schema for the zone ingress API
 *
 * @schema ZoneIngress
 */
export interface ZoneIngressProps {
  /**
   * @schema ZoneIngress#mesh
   */
  readonly mesh?: string;

  /**
   * @schema ZoneIngress#spec
   */
  readonly spec?: any;

  /**
   * @schema ZoneIngress#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'ZoneIngressProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ZoneIngressProps(obj: ZoneIngressProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * ZoneIngressInsight is the Schema for the zone ingress insight API
 *
 * @schema ZoneIngressInsight
 */
export class ZoneIngressInsight extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ZoneIngressInsight"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'ZoneIngressInsight',
  }

  /**
   * Renders a Kubernetes manifest for "ZoneIngressInsight".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ZoneIngressInsightProps = {}): any {
    return {
      ...ZoneIngressInsight.GVK,
      ...toJson_ZoneIngressInsightProps(props),
    };
  }

  /**
   * Defines a "ZoneIngressInsight" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ZoneIngressInsightProps = {}) {
    super(scope, id, ZoneIngressInsight.manifest(props));
  }
}

/**
 * ZoneIngressInsight is the Schema for the zone ingress insight API
 *
 * @schema ZoneIngressInsight
 */
export interface ZoneIngressInsightProps {
  /**
   * @schema ZoneIngressInsight#mesh
   */
  readonly mesh?: string;

  /**
   * @schema ZoneIngressInsight#spec
   */
  readonly spec?: any;

  /**
   * @schema ZoneIngressInsight#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'ZoneIngressInsightProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ZoneIngressInsightProps(obj: ZoneIngressInsightProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * ZoneInsight is the Schema for the zone insight API
 *
 * @schema ZoneInsight
 */
export class ZoneInsight extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ZoneInsight"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kuma.io/v1alpha1',
    kind: 'ZoneInsight',
  }

  /**
   * Renders a Kubernetes manifest for "ZoneInsight".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ZoneInsightProps = {}): any {
    return {
      ...ZoneInsight.GVK,
      ...toJson_ZoneInsightProps(props),
    };
  }

  /**
   * Defines a "ZoneInsight" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ZoneInsightProps = {}) {
    super(scope, id, ZoneInsight.manifest(props));
  }
}

/**
 * ZoneInsight is the Schema for the zone insight API
 *
 * @schema ZoneInsight
 */
export interface ZoneInsightProps {
  /**
   * @schema ZoneInsight#mesh
   */
  readonly mesh?: string;

  /**
   * @schema ZoneInsight#spec
   */
  readonly spec?: any;

  /**
   * @schema ZoneInsight#metadata
   */
  readonly metadata?: ApiObjectMetadata;

}

/**
 * Converts an object of type 'ZoneInsightProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ZoneInsightProps(obj: ZoneInsightProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mesh': obj.mesh,
    'spec': obj.spec,
    'metadata': obj.metadata,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

